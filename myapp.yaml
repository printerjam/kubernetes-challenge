apiVersion: v1
kind: Namespace
metadata:
  name: myapp
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: myapp
  namespace: myapp
spec:
  hard:
    pods: "4"
    requests.cpu: "500m"
    requests.memory: 256Mi
    limits.memory: 256Mi
---
apiVersion: v1
kind: LimitRange
metadata:
  name: myapp
  namespace: myapp
spec:
  limits:
  - default:
      memory: 64Mi
    defaultRequest:
      cpu: 100m
      memory: 64Mi
    max:
      memory: 64Gi
    min:
      memory: 32Mi
    type: Container
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: myapp
  namespace: myapp
spec:
  podSelector:
    matchLabels:
      app: myapp
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - ports:
    - protocol: TCP
      port: 4000
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: v1
data:
  name: PickleRick
kind: ConfigMap
metadata:
  name: myapp
  namespace: myapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: myapp
  name: myapp
  namespace: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: myapp
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - image: localhost:5000/myapp:v1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        imagePullPolicy: Always
        name: myapp
        resources:
          limits:
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 64Mi
        ports:
        - containerPort: 4000
        env:
          - name: NAME
            valueFrom:
              configMapKeyRef:
                key: name
                name: myapp
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        readinessProbe:
          httpGet:
            path: /
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 4000
          initialDelaySeconds: 15
          periodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - myapp
              topologyKey: kubernetes.io/hostname
            weight: 100
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: myapp
  name: myapp
  namespace: myapp
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4000
  selector:
    app: myapp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myapp-ingress
  namespace: myapp
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myapp
                port:
                  number: 80